// Mocks generated by Mockito 5.4.4 from annotations
// in investment_tracking/test/features/property_tracking/data/property_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:device_calendar/device_calendar.dart' as _i4;
import 'package:investment_tracking/features/property_tracking/data/datasources/calendar_data_source.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CalendarDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarDataSource extends _i1.Mock
    implements _i2.CalendarDataSource {
  MockCalendarDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Event>> getRawRentalEvents({required DateTime? month}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRawRentalEvents,
          [],
          {#month: month},
        ),
        returnValue: _i3.Future<List<_i4.Event>>.value(<_i4.Event>[]),
      ) as _i3.Future<List<_i4.Event>>);

  @override
  _i3.Future<void> updateEventToPaid({
    required String? eventId,
    required String? calendarId,
    required String? currentTitle,
    required _i4.TZDateTime? start,
    required _i4.TZDateTime? end,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateEventToPaid,
          [],
          {
            #eventId: eventId,
            #calendarId: calendarId,
            #currentTitle: currentTitle,
            #start: start,
            #end: end,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
